(()=>{"use strict";var e={715:(e,t)=>{var n;Object.defineProperty(t,"__esModule",{value:!0}),t.GalleryHtmlConstructor=t.MediaType=void 0,function(e){e.Image="img",e.Video="video",e.Page="iframe"}(n||(t.MediaType=n={})),t.GalleryHtmlConstructor=class{constructor(){}async loadContentsFromJson(e){const t=await fetch(e);return(await t.json()).contents}constructGalleryContents(e,t){const n=document.getElementById(e);if(n)for(const e of t)this.constructGalleryContent(n,e)}constructGalleryContent(e,t){const n=this.generateCardBlockElement(t.media);e.appendChild(n);const i=this.generateDescriptionBlockElement(t);e.appendChild(i)}generateDescriptionBlockElement(e){const t=document.createElement("div");t.className="col s5";const n=document.createElement("h3");n.textContent=e.title,t.appendChild(n);for(const n of e.description){const e=document.createElement("p");e.textContent=n,t.appendChild(e)}if(e.github){const n=document.createElement("p");for(let t=0;t<e.github.length;t++){const i=e.github[t],o=document.createElement("a");o.textContent=i.title,o.setAttribute("href",i.url),n.appendChild(document.createTextNode("Github：")),n.appendChild(o),t<e.github.length-1&&n.appendChild(document.createElement("br"))}t.appendChild(n)}if(e.zenn){const n=document.createElement("p");for(let t=0;t<e.zenn.length;t++){const i=e.zenn[t],o=document.createElement("a");o.textContent=i.title,o.setAttribute("href",i.url),n.appendChild(document.createTextNode("技術ブログ：")),n.appendChild(o),t<e.zenn.length-1&&n.appendChild(document.createElement("br"))}t.appendChild(n)}return t}generateCardBlockElement(e){const t=this.generateCardBlockHtml(e),n=document.createElement("div");return n.innerHTML=t.trim(),n.firstChild}generateCardBlockHtml(e){return`\n    <div class="col s7">\n        <div class="card">\n            <div class="card-image">\n                ${this.generateMediaHtml(e)}\n            </div>\n        </div>\n    </div>\n    `}generateMediaHtml(e){switch(e.type){case n.Image:return this.generateImageHtml(e.src);case n.Video:return this.generateVideoHtml(e.src);case n.Page:return this.generatePageHtml(e.src)}}generateVideoHtml(e){return`\n    <video class="materialboxed" src="${e}" autoplay muted loop></video>\n     `}generateImageHtml(e){return`\n    <img class="materialboxed" src="${e}"></img>\n    `}generatePageHtml(e){return'\n    <iframe id="iframe-self-page" frameborder="no"></iframe>\n    '}}},180:function(e,t,n){var i=this&&this.__importDefault||function(e){return e&&e.__esModule?e:{default:e}};Object.defineProperty(t,"__esModule",{value:!0});const o=n(715),r=i(n(998));function a(e){return new Promise((t=>setTimeout(t,e)))}function l(e,t){if(!e)return null;const n=document.createElement("span");return n.textContent="_",e.appendChild(n),setInterval((function(){n.style.visibility="hidden"===n.style.visibility?"visible":"hidden"}),t),n}document.addEventListener("DOMContentLoaded",(async function(){const e=document.getElementById("title");await async function(){const e=new o.GalleryHtmlConstructor,t=r.default;e.constructGalleryContents("coding-gallery",t.contents)}(),function(){const e=document.getElementById("iframe-self-page"),t=window.innerWidth,n=e?.parentElement,i=n?.clientWidth||0,o=n?.clientHeight||0,r=i/t;e&&(e.style.width=`${i}px`,e.style.height=`${o}px`,e.src=`index.html?iframe=true&zoom=${r}`);const a=new URL(document.location.href).searchParams;if("true"===a.get("iframe")&&e){const t=parseFloat(a.get("zoom")||"1");document.body.style.zoom=`${t}`,e.src=""}}(),function(){const e=document.querySelector("body"),t=e?.className||"",n=window.innerHeight;function i(){const i=window.scrollY;e.className=i<n?`${t} color-section1`:`${t} color-section2`}i(),window.addEventListener("scroll",i)}(),function(){const e=document.querySelectorAll(".materialboxed");M.Materialbox.init(e,{});const t=document.querySelectorAll(".carousel");M.Carousel.init(t,{indicators:!0,fullWidth:!0});const n=document.querySelectorAll(".tooltipped");M.Tooltip.init(n,{})}(),await async function(e,t,n){const i=l(e,500);i&&(await a(2e3),i.remove())}(e),await async function(e,t){if(e)for(let n=0;n<9;n++)e.innerHTML+=t.charAt(n),await a(100)}(e,"Portfolio"),l(e,500)}))},998:e=>{e.exports=JSON.parse('{"contents":[{"title":"紐物理の実装","description":["論文をもとにPBD/XPBD(PositionBasedDynamics)の実装をしました。PBDではどういう課題があり、それをXPBDではどう解決したのか、順に追って学べたのも面白かったです。アルゴリズムをただコーディングするだけでなく、論文を通して物理シミュレーションや数理最適などのテクニックなどに触れ、学びが多くありました。また、PBDは多く使われている技術のため、どのような実装がされているのか知ることができ興味深く、楽しく実装できました。"],"media":{"type":"video","src":"media/XPBD.mp4"},"github":[{"title":"PositionBasedDynamics","url":"https://github.com/ner-develop/PositionBasedDynamics"},{"title":"PositionBasedDynamicsForUE","url":"https://github.com/ner-develop/PositionBasedDynamicsForUE"},{"title":"PositionBasedDynamicsForGodot","url":"https://github.com/ner-develop/PositionBasedDynamicsForGodot"}],"zenn":[{"title":"[Unity] 論文を読んで紐物理を実装してみよう(PBD: Position Based Dynamics)","url":"https://zenn.dev/nrdev/articles/141dbc5774f666"},{"title":"[Unity] 論文を読んで紐物理を実装してみよう(XPBD: Extended Position Based Dynamics)","url":"https://zenn.dev/nrdev/articles/68ff50a19d91b9"}]},{"title":"Gerstner Wavesの実装","description":["GPU Gemsを参考にUnity上で実装しました。通常のSin波に、距離に応じてCos値のずれを加えることで密度差を生み出す手法は、シンプルながら波の勾配を表現することができとても面白いと感じました。"],"media":{"type":"video","src":"media/gerstner_waves.mp4"},"github":[{"title":"GerstnerWaves","url":"https://github.com/ner-develop/GerstnerWaves"}],"zenn":[{"title":"[Unity] 数式を読み解きながら頂点シェーダーで波の動きを作ってみる(Gerstner Waves)","url":"https://zenn.dev/nrdev/articles/a1a350e5d7e725"}]},{"title":"デカールペイント","description":["スプラトゥーンのようなペイント表現、攻撃したあとの返り血の表現など、オブジェクトの任意の場所にテクスチャを累積描画する実装をしてみました。"],"media":{"type":"video","src":"media/decal_painter.mp4"},"github":[{"title":"DecalPainter","url":"https://github.com/ner-develop/DecalPainter"}],"zenn":[{"title":"[Unity] 鮮血を、浴びせよ...!!","url":"https://zenn.dev/nrdev/articles/1ae096ef6d9637"}]},{"title":"Active Ragdollの実装","description":["キャラクターをアニメーションで動かしつつ、物理影響を受けるラグドール化をする実装をしました。Fall GuysやHuman Fall Flatのようなキャラクターの動きを試してみたく実装しました。実装には誤差をフィードバックとして制御するPID制御を用いています。"],"media":{"type":"video","src":"media/active-ragdoll.mp4"},"github":[],"zenn":[]},{"title":"レイマーチングを使ったメタボール表現","description":["ピクセルごとに符号あり距離関数に応じてレイを進め、物体への当たり判定を取ります。その際に物体間を補完し、メタボール表現を行っています。レンダリング時に透過と屈折表現などを加え、ライブ演出として実装してみました。","なお、ライブはユニティちゃんライブステージ(© UTJ/UCL)を利用させていただき、そこへ変更・演出追加をしています。"],"media":{"type":"video","src":"media/metaball_live.mp4"},"github":[],"zenn":[]},{"title":"モバイル動作のためのメタボール表現の負荷軽減","description":["レイマーチングを使ったメタボール表現の実装では、ピクセルごとにレイを進める処理が走ります。そのため、画面のピクセルが多いほど処理負荷が大きくなります。低スペックAndroid端末で動作させたところ数秒に1フレーム更新できるかどうかでした。そこでレイマーチングだけ専用パスを用意し、低解像度で描画し、最後に合成することで低スペック端末でも動作するようにしました。"],"media":{"type":"video","src":"media/metaball.mp4"},"github":[],"zenn":[]},{"title":"水面の波紋シミュレーション","description":["波動方程式を使ったシミュレーションを実装しました。オイラー陽解法を学んだ後に学びましたが、これも加速度などの微分を式に持つ方程式を使ってテイラー級数による近似によって計算するという物理シミュレーションとしての根本は同じというのが面白かったです。今後の課題としては、キャラクターが浅い水場を歩いた際のエフェクトとして、実際にゲームで使えるような実装まで落とし込みたいと思います。"],"media":{"type":"video","src":"media/wave_equation.mp4"},"github":[],"zenn":[]},{"title":"ドロネー三角形分割","description":["「ラクガキ王国」で使われている、描いた線から3Dモデルを生成する手法の論文がきっかけで知ったドロネー三角形分割というアルゴリズムを実装してみました。本実装は水面の波紋シミュレーションの水面メッシュ生成にも使用しています。"],"media":{"type":"img","src":"media/delaunay_triangulation_20240108000025.png"},"github":[],"zenn":[]},{"title":"ポートフォリオサイト","description":["Github Pagesを使って、HTML/CSS/Javascriptで作成しています。"],"media":{"type":"iframe","src":""},"github":[{"title":"Portfolio","url":"https://github.com/ner-develop/Portfolio"}]}]}')}},t={};!function n(i){var o=t[i];if(void 0!==o)return o.exports;var r=t[i]={exports:{}};return e[i].call(r.exports,r,r.exports,n),r.exports}(180)})();